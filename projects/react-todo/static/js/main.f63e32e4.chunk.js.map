{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","type","placeholder","this","onChange","Component","TodoListItem","onLabelClick","onMarkImportnat","_ref2","important","_this$props","label","onDeleted","onToggleImportant","onToggleDone","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChanged","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","toConsumableArray","slice","addItem","text","newItem","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.f63e32e4.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;","import React, { Component } from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    term: ''\n  }\n  onSearchChange = (e) => {\n    const term = e.target.value;\n    this.setState({ term });\n    this.props.onSearchChange(term);\n  }\n\n  render() {\n    return (\n      <input type=\"text\"\n                className=\"form-control search-input\"\n                placeholder=\"type to search\" \n                value={this.state.term} \n                onChange={this.onSearchChange}  />\n    );\n  }\n}\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;","import React, {Component} from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n\n  onLabelClick = () => {\n    this.setState(({done}) => {\n      return {\n        done: !done\n      }\n    });\n  };\n  onMarkImportnat = () => {\n    this.setState(({important}) => {\n      return {\n        important: !important\n      }\n    });\n  };\n\n  render() {\n    const { label, onDeleted, onToggleImportant, onToggleDone, important, done } = this.props;\n\n    let classNames = 'todo-list-item';\n    if(done) {\n      classNames += ' done';\n    }\n    if(important) {\n      classNames += ' important';\n    }\n    \n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={ onToggleDone }>\n          {label}\n        </span>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={ onToggleImportant }>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  };\n}\n","import TodoList from './todo-list';\n\nexport default TodoList;","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, \n                    onDeleted, \n                    onToggleImportant, \n                    onToggleDone }) => {\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem \n          {...itemProps } \n          onDeleted={() => onDeleted(id)}\n          onToggleDone={ () => onToggleDone(id) }\n          onToggleImportant={ () => onToggleImportant(id) } />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;","import React, {Component} from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n  buttons = [\n    {name: 'all', label: 'All'},\n    {name: 'active', label: 'Active'},\n    {name: 'done', label: 'Done'}\n  ] \n\n  render() {\n\n    const { filter, onFilterChange } = this.props;\n\n    const buttons = this.buttons.map(({name, label}) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n      return (\n        <button type=\"button\"\n                className={`btn ${clazz}`}\n                key={name}\n                onClick={ () => onFilterChange(name) } >{label}</button>\n      );\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}","import ItemAddForm from './item-add-form';\n\nexport default ItemAddForm;","import React, { Component } from 'react';\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n\n    state = {\n        label: ''\n    };\n\n    onLabelChanged = (e) => {\n        this.setState({\n            label: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onItemAdded(this.state.label);\n\n        this.setState({\n            label: ''\n        });\n    };\n\n    render() {\n        return (\n            <form className=\"item-add-form d-flex\"\n                  onSubmit={ this.onSubmit }   >\n                <input type=\"text\"\n                        className=\"form-control search-\" \n                        onChange={ this.onLabelChanged }\n                        placeholder=\"What to do?\"\n                        value={ this.state.label } />\n                <button \n                    className=\"btn btn-outline-secondary\">Add item</button>\n            </form>\n        );\n    }\n} ","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\n\nimport './app.css';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\n\nexport default class App extends Component {\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink'),\n            this.createTodoItem('pivo'),\n            this.createTodoItem('repeat')\n          ],\n        term: '',\n        filter: 'all'\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n            const newArr = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ];\n            \n            return {\n                todoData: newArr\n            }\n        });\n    }\n\n    addItem = (text) => {\n        if(text !== '') {\n            const newItem = this.createTodoItem(text);\n\n            this.setState(({ todoData }) => {\n                const newData = [\n                    ...todoData,\n                    newItem\n                ];\n    \n                return {\n                    todoData: newData\n                }\n            });\n        }\n    };\n\n    toggleProperty(arr, id, propName) {\n            const idx = arr.findIndex((el) => el.id === id);\n            const oldItem = arr[idx];\n            const newItem = { ...oldItem, [propName]: !oldItem[propName]};\n            return [\n                ...arr.slice(0, idx),\n                newItem,\n                ...arr.slice(idx + 1)\n            ];\n    }\n    onToggleImportant = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            };\n        });  \n    };\n\n    onToggleDone = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            };\n        });       \n    };\n\n    onSearchChange = (term) => {\n        this.setState({ term });\n    };\n    \n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    };\n\n    search(items, term) {\n        if (term.length === 0) {\n            return items;\n        }\n        return items.filter((el) => {\n            return el.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n        })\n    }\n\n    filter(items, filter) {\n        switch(filter) {\n            case 'all': \n                return items;\n            case 'active':\n                    return items.filter((el) => !el.done);\n            case 'done':\n                    return items.filter((el) => el.done);\n            default: \n                return items;\n        }\n    }\n\n    render() {\n        const { todoData, term, filter } = this.state;\n        const visibleItems = this.filter(this.search(todoData, term), filter);\n        const doneCount = todoData.filter((el) => el.done).length;\n        const todoCount = todoData.length - todoData.filter((el) => el.done).length;\n        return (\n            <div className=\"todo-app\">\n              <AppHeader toDo={todoCount} done={doneCount} />\n              <div className=\"top-panel d-flex\">\n                <SearchPanel onSearchChange={ this.onSearchChange } />\n                <ItemStatusFilter \n                    filter={filter} \n                    onFilterChange={ this.onFilterChange } />\n              </div>\n        \n              <TodoList \n                  todos={visibleItems} \n                  onDeleted={ this.deleteItem }\n                  onToggleImportant={this.onToggleImportant}\n                  onToggleDone={this.onToggleDone} />\n                <ItemAddForm onItemAdded={this.addItem} />\n            </div>\n          );\n    };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}